//{ Driver Code Starts
import java.io.*;
import java.lang.*;
import java.util.*;

class gfg {

    public static void main(String args[]) throws IOException {
        BufferedReader read = new BufferedReader(new InputStreamReader(System.in));
        int t = Integer.parseInt(read.readLine());

        while (t-- > 0) {
            String st[] = read.readLine().trim().split("\\s+");
            int n = st.length;
            int arr[] = new int[n];

            for (int i = 0; i < n; i++) arr[(int)i] = Integer.parseInt(st[(int)i]);

            System.out.println(new Solution().maxStep(arr));
        }
    }
}

// } Driver Code Ends

class Solution {
    // Function to find maximum number of consecutive steps
    // to gain an increase in altitude with each step.
    public int maxStep(int arr[]) {
        // Initialize the maximum and current steps count
        int max_steps = 0;
        int current_steps = 0;
        
        // Traverse the array from the second element
        for (int i = 1; i < arr.length; i++) {
            // If the current building is taller than the previous one
            if (arr[i] > arr[i - 1]) {
                current_steps++; // Increment the current steps
            } else {
                current_steps = 0; // Reset the current steps
            }
            // Update the maximum steps encountered so far
            max_steps = Math.max(max_steps, current_steps);
        }
        
        return max_steps;
    }
}
